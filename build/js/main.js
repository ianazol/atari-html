function setTrenerBackground(){if($(".js-trener").length>0){var e=$(".js-trener").data("big-img"),n=$(".js-trener").data("min-img");$(window).width()>=768?$(".js-trener").css({backgroundImage:"url("+e+")"}):$(".js-trener").css({backgroundImage:"url("+n+")"})}}!function(e){document.getElementsByClassName("js-svglib")[0].innerHTML=window.SVG_SPRITE}(jQuery),function(e){function n(){this.menuTL=new TimelineLite,this.timer=null,this.obOverlay=e(".overlay"),this.scrollTop=0}n.prototype.init=function(){var n=this;e(".js-menu-open").click(function(e){e.preventDefault(),n.open()}),e(".js-menu-close, .overlay").click(function(e){e.preventDefault(),n.close()})},n.prototype.open=function(){if(!e("body").hasClass("menu_open")){e("body").addClass("menu_open");var n=e(".js-menu-item");this.obOverlay.removeClass("overlay--hidden"),clearTimeout(this.timer),this.menuTL.staggerFrom(n,.2,{x:"-=50",opacity:0,ease:Power0.easeNone},.03,"+=0.2")}},n.prototype.close=function(){var n=this;e("body").hasClass("menu_open")&&(e("body").removeClass("menu_open"),this.timer=setTimeout(function(){n.obOverlay.addClass("overlay--hidden")},300))};var t=new n;t.init()}(jQuery),$(".js-formValidate").find(".required").change(function(){""==$(this).val()?$(this).addClass("invalid"):$(this).removeClass("invalid")}),$(".js-formValidate").submit(function(){var e=!1;if($(this).find(".required").each(function(n,t){""==$(t).val()?(e=!0,$(t).addClass("invalid")):$(t).removeClass("invalid")}),e)return!1}),function(e){setTrenerBackground(),e(window).resize(function(){setTrenerBackground()})}(jQuery),function(e){var n=new ScrollMagic.Controller;if(Modernizr.touch)e(".js-toggle-bg").addClass("dark-bg");else{e("video").length>0&&e("video").get(0).play(),e(".js-parallax").each(function(){var t=100*e(this).data("offset")+"%";new ScrollMagic.Scene({triggerElement:this,triggerHook:.9}).setTween(TweenMax.from(this,.5,{autoAlpha:0,ease:Power0.easeInOut,y:t})).addTo(n)}),e(".js-opacity").each(function(){new ScrollMagic.Scene({triggerElement:this,triggerHook:.9}).setTween(TweenMax.from(this,.5,{autoAlpha:0,ease:Power0.easeInOut})).addTo(n)});new ScrollMagic.Scene({triggerElement:".js-toggle-bg",triggerHook:.6}).setClassToggle(".js-toggle-bg","dark-bg").addTo(n)}e(".js-header-black").each(function(){new ScrollMagic.Scene({triggerElement:this,triggerHook:0,offset:-30,duration:this.offsetHeight}).setClassToggle(".header","header--dark").addTo(n)}),e(".js-scroll").click(function(){n.scrollTo(function(n){e("html, body").animate({scrollTop:n})}),n.scrollTo(e(window).height())})}(jQuery);
//# sourceMappingURL=data:application/json;base64,
